#INCLUDE "totvs.ch"
#INCLUDE "fileio.ch"
#INCLUDE "topconn.ch"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RFIS001   ºAutor  ³Tarcisio Silva MirandaºData³  08/03/2018 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Relatório da Sft.										  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ 										                      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function RFIS001()

	// Declaracao de Variaveis
	Local 	aArea 		:= GetArea()
	Local	cQry        := ""
	Local 	cEol        := chr(13)+chr(10)
	Local 	dDataDe 	:= StoD("")
	Local 	dDataAte	:= StoD("")
	Local 	nMov	 	:= 0
	Local 	cDocDe		:= ""
	Local 	cDocAte		:= ""
	Local 	cTpMov		:= ""

	////////////////////////////////////////////////////////////////////////
	///Outras Variaveis
	////////////////////////////////////////////////////////////////////////
	Private cLocFile    := ""
	Private cPerg       := "RFIS001"

	////////////////////////////////////////////////////////////////////////
	///Cria as perguntas no SX1
	////////////////////////////////////////////////////////////////////////
	ValPer01()

	if !Pergunte(cPerg,.t.)
		return
	endif	

	dDataDe		:= dTos(mv_par01)
	dDataAte	:= dTos(mv_par02)
	cDocDe 		:= mv_par03
	cDocAte  	:= mv_par04
	nMov		:= mv_par05

	cLocFile 	:= mv_par06

	if nMov == 1
		cTpMov		:= "E" 																										
	elseif nMov == 2
		cTpMov		:= "S" 		 																										
	endif

	cQry+=" SELECT ft_filial, substr(ft_entrada,7,2)||'/'||substr(ft_entrada,5,2)||'/'||substr(ft_entrada,1,4) dtentrada , 								" +cEOL
	cQry+="        substr(ft_emissao,7,2)||'/'||substr(ft_emissao,5,2)||'/'||substr(ft_emissao,1,4) dtemissao ,											" +cEOL
	cQry+="        ft_nfiscal, ft_serie, ft_cliefor, ft_loja, ft_estado, ft_cfop, ft_aliqicm, ft_valcont, ft_baseicm,ft_conta, ft_produto,b1_desc, 		" +cEOL
	cQry+="        ft_valicm, ft_isenicm, ft_outricm, ft_baseret, ft_icmsret, ft_observ, ft_tipo, ft_especie, ft_tipomov, 								" +cEOL
	cQry+="        substr(ft_dtcanc,7,2)||'/'||substr(ft_dtcanc,5,2)||'/'||substr(ft_dtcanc,1,4) dtdtcanc, 												" +cEOL
	cQry+="        ft_clasfis, ft_ctipi, ft_posipi, ft_identf3, ft_Estoque, ft_despipi, ft_quant, ft_prcunit, ft_descont, ft_total, ft_peso, ft_basepis," +cEOL
	cQry+="        ft_aliqpis, ft_valpis, ft_basecof, ft_aliqcof, ft_valcof, ft_basecsl, ft_aliqcsl, ft_valcsl, ft_client, ft_lojent, ft_cstpis,		" +cEOL
	cQry+="        ft_cstcof, ft_aliqsol, ft_margem, ft_croutsp, ft_aretpis, ft_aretcof, ft_aretcsl, ft_agreg, ft_cest, ft_bsicmor, ft_tes, f3_descret, " +cEOL
	cQry+="        f3_observ, f3_chvnfe ChaveNf																											" +cEOL
	cQry+="        FROM " + RetSqlName("SFT")  + " , " + RetSqlName("SF3") + " , " + RetSqlName("SB1") + " 												" +cEOL
	cQry+=" WHERE sft010.d_e_l_e_t_ = ' '																												" +cEOL
	cQry+="  AND sf3010.d_e_l_e_t_ = ' '																												" +cEOL
	cQry+="  AND sb1010.d_e_l_e_t_ = ' '																												" +cEOL
	cQry+="  AND ft_emissao BETWEEN '"+dDataDe+"' AND '"+dDataAte+"' 																					" +cEOL
	cQry+="  AND ft_nfiscal BETWEEN '"+cDocDe+"' AND '"+cDocAte+"' 																						" +cEOL
	cQry+="  AND ft_filial||ft_nfiscal||ft_serie||ft_cliefor||ft_loja = f3_filial||f3_nfiscal||f3_serie||f3_cliefor||f3_loja							" +cEOL
	cQry+="  and ft_produto = b1_cod 																													" +cEOL
	
	if!empty(cTpMov)
		cQry+="  AND FT_TIPOMOV = '"+cTpMov+"'																											" +cEOL
	endif

	MemoWrite("C:\temp\RFIS001.sql",cQry)

	cQry := ChangeQuery(cQry)

	if Select("TRB") > 0
		TRB->(DbCloseArea())
	endif

	TcQuery cQry New Alias "TRB"

	dbSelectArea("TRB")
	TRB->(dbGoTop())


	Processa( {|| SPCPR01Excel() }, "Aguarde...", "Gerando planilha eletronica com as informações...",.F.)


	TRB->(DbCloseArea())
	RestArea(aArea)
Return

/*??????????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????????????
???????????????????????????????????????????????????????????????????????????????????
???Programa   ? ValPerg()  ? Autor ? Diego Bueno               ? Data ?20/03/2014???
????????????????????????????????????????????????????????????????????????????????J??
???Descricao  ? Cria perguntas no SX1	                                         ???
????????????????????????????????????????????????????????????????????????????????J??
???Observacao ?                                                                  ???
???           ?                                                                  ???
???????????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????????????
??????????????????????????????????????????????????????????????????????????????????*/

Static Function ValPer01()
	_sAlias	:=	Alias()
	//Retirado Sangelles 22/03/2022 ->
	//Retirado Sangelles 22/03/2022 ->dbSetOrder(1)
	cPerg 	:=	PADR(cPerg,10)

	U_xPutSx1(cPerg,"01","Emissão de ?","."     	,"."     ,"mv_CH1","D",08,0,0,"G","","","","","MV_PAR01","","","","","","","","","","","","","","","","")
	U_xPutSx1(cPerg,"02","Emissão Até ?","."     	,"."     ,"mv_CH2","D",08,0,0,"G","","","","","MV_PAR02","","","","","","","","","","","","","","","","")
	U_xPutSx1(cPerg,"03","Nota de ?","."     ,"."   		 ,"mv_CH3","C",09,0,0,"G","","","","","MV_PAR03","","","","","","","","","","","","","","","","")
	U_xPutSx1(cPerg,"04","Nota Até?","."     ,"."   		 ,"mv_CH4","C",09,0,0,"G","","","","","MV_PAR04","","","","","","","","","","","","","","","","")
	U_xPutSx1(cPerg,"05","Tp. Movimento ?"	,"."   ,"."		 ,"mv_CH5","N",01,0,0,"C","","","","","MV_PAR05","Entrada","Entrada","Entrada","Saída","Saída","Saída","Ambas","Ambas","Ambas","","","",,,)
	U_xPutSx1(cPerg,"06","Salvar Em ?","."     ,"."          ,"mv_CH6","C",50,0,0,"G","","","","","MV_PAR06","","","","","","","","","","","","","","","","")

	dbSelectArea(_sAlias)

Return()

/*
?????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???Programa  SPCPR01Excel   ?Autor ?Diego Bueno      ? Data ?  20/03/14   ???
????????????????????????????????????????????????????????????????????????????
???Desc.     ? Gera a impress?o em planilha eletronica.                   ???
???          ?                                                            ???
????????????????????????????????????????????????????????????????????????????
???Uso       ? Concebra                                                   ???
????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
*/
Static Function SPCPR01Excel()
	Local oFWMSExcel := FWMSExcel():New()
	Local oMsExcel
	Local aCells
	Local cType
	Local cColumn
	Local cFile
	Local cFileTMP
	//Local cPicture
	Local lTotal
	Local nRow
	Local nRows
	Local nField
	Local nFields
	Local nAlign
	Local nFormat
	Local uCell
	Local _aHeadXls :={}
	Local _aColsXls :={}

	Local cWorkSheet := "Relatório de Rastreabilidade "
	Local cTable     := "Relatório de Rastreabilidade "+DtoC(Date())+" as "+Time()
	//Local lTotalize  := .F.
	//Local lPicture   := .F.

	dbSelectArea("TRB")
	TRB->(dbGoTop())

	ProcRegua(TRB->(Reccount()) )

	_aHeadXls := {"Filial","Dt.Entrada","Dt.Emissão","Nota Fiscal","Serie","Cliente/Fornece","Lj","Estado","Cfop","Aliq.Icms","Val.Cont",;
	"Base.Icm","Conta","Produto","Descrição","ValIcm","Isen.Icm","Outr.Icm","Base.Ret","Icms.Ret","Observação","Tipo","Especie","Entrada/Saída",;
	"Dt.Cancela","Class.Fis","Ct.Ipi","PosIpi","Ident3","Estoque","DespIpi","Quant","Prc.Unit","Descont","Total","Peso","Base.Pis","Aliq.Pis",;
	"Val.Pis","Base.Cof","Aliq.Cof","Val.Cof","Base.Csl","Aliq.Csl","Val.Csl","Cliente","Loja","CstPis","CstCof","AliqSol","Margem","CrouTsp","AretPis",;
	"AretCof","AretCsl","Agreg","Cest","BsIcmor","Tes","Descret","Observação","ChaveNf"}
	
	While !TRB->(Eof())

		IncProc("Processando Relatório: " + TRB->ft_filial + "-" + TRB->ft_nfiscal)
		
		
		aAdd(_aColsXls,{TRB->ft_filial ,TRB->dtentrada , TRB->dtemissao , TRB->ft_nfiscal, TRB->ft_serie, TRB->ft_cliefor, TRB->ft_loja, TRB->ft_estado,;  
			TRB->ft_cfop, TRB->ft_aliqicm, TRB->ft_valcont, TRB->ft_baseicm,TRB->ft_conta, TRB->ft_produto,b1_desc, TRB->ft_valicm,; 			
			TRB->ft_isenicm, TRB->ft_outricm, TRB->ft_baseret, TRB->ft_icmsret, TRB->ft_observ, TRB->ft_tipo, TRB->ft_especie, TRB->ft_tipomov,; 
			TRB->dtdtcanc, TRB->ft_clasfis, TRB->ft_ctipi, TRB->ft_posipi, TRB->ft_identf3, TRB->ft_Estoque, TRB->ft_despipi, TRB->ft_quant,; 
			TRB->ft_prcunit, TRB->ft_descont, TRB->ft_total, TRB->ft_peso, TRB->ft_basepis, TRB->ft_aliqpis, TRB->ft_valpis, TRB->ft_basecof,; 
			TRB->ft_aliqcof, TRB->ft_valcof, TRB->ft_basecsl, TRB->ft_aliqcsl, TRB->ft_valcsl, TRB->ft_client, TRB->ft_lojent, TRB->ft_cstpis,; 
			TRB->ft_cstcof, TRB->ft_aliqsol, TRB->ft_margem, TRB->ft_croutsp, TRB->ft_aretpis, TRB->ft_aretcof, TRB->ft_aretcsl, TRB->ft_agreg,; 
			TRB->ft_cest, TRB->ft_bsicmor, TRB->ft_tes, TRB->f3_descret, TRB->f3_observ, TRB->ChaveNf})

		
		TRB->(DbSkip())

	End

	If Len(_aColsXls) > 0

		BEGIN SEQUENCE

			oFWMSExcel:AddworkSheet(cWorkSheet)
			oFWMSExcel:AddTable(cWorkSheet,cTable)

			nFields := Len( _aHeadXls )
			For nField := 1 To nFields
				cType   := "C"
				cType := ValType(_aColsXls[1][nField])
				nAlign  := IF(cType=="C",1,IF(cType=="N",3,2))
				nFormat := IF(cType=="D",4,IF(cType=="N",2,1))
				cColumn := _aHeadXls[nField]
				lTotal  := .F. // ( lTotalize .and. cType == "N" )
				oFWMSExcel:AddColumn(@cWorkSheet,@cTable,@cColumn,@nAlign,@nFormat,@lTotal)
			Next nField

			oFWMSExcel:CBGCOLOR2LINE := '#FFFFFF'
			oFWMSExcel:CBGCOLORLINE  := '#FFFFFF'

			aCells := Array(nFields)
			nRows  := Len( _aColsXls )
			For nRow := 1 To nRows
				IncProc("Gerando planilha.. [Linha: "+TRANSFORM(nRow,"@E 999999")+" de "+TRANSFORM(Len(_aColsXls),"@E 999999")+" ]    ")
				For nField := 1 To nFields
					uCell := _aColsXls[nRow][nField]
					If Valtype(uCell) == "D" .AND. EMPTY(uCell)
						aCells[nField] := space(8)
					Else
						aCells[nField] := uCell
					Endif
				Next nField
				oFWMSExcel:AddRow(@cWorkSheet,@cTable,aClone(aCells))
			Next nRow
			oFWMSExcel:Activate()

			cFile := ( FwTemporaryTable( NIL, .F. ) + ".xls" )

			While File( cFile )
				cFile := ( FwTemporaryTable( NIL, .F. ) + ".xls" )
			End While

			oFWMSExcel:GetXMLFile( cFile )
			oFWMSExcel:DeActivate()

			IF .NOT.( File( cFile ) )
				MsgStop("Falha ao tentar criar arquivo "+cFile)
				cFile := ""
				BREAK
			EndIF

			cLocFile := AllTrim(cLocFile)
			if SubStr(cLocFile,Len(cLocFile),1) <> '\'
				cLocFile += '\'
			endif

			cFileTMP := ( cLocFile + cFile )
			IF .NOT.( __CopyFile( cFile , cFileTMP ) )
				MsgStop("Falha ao tentar salvar arquivo em "+cLocFile)
				fErase( cFile )
				cFile := ""
				BREAK
			EndIF

			fErase( cFile )

			cFile := cFileTMP

			IF .NOT.( File( cFile ) )
				MsgStop("Falha ao tentar salvar arquivo em "+cLocFile)
				cFile := ""
				BREAK
			EndIF

			IF .NOT.( ApOleClient("MsExcel") )
				MsgStop("Falha ao tentar abrir arquivo "+cFile+". Excel n?o instalado!")
				BREAK
			EndIF

			oMsExcel:= MsExcel():New()
			oMsExcel:WorkBooks:Open( cFile )
			oMsExcel:SetVisible( .T. )
			oMsExcel:= oMsExcel:Destroy()
		END SEQUENCE

		oFWMSExcel := FreeObj( oFWMSExcel )


	else
		MsgInfo("Não há dados para serem impressos!","VERIFIQUE OS PARAMETROS")
	endif

Return()
